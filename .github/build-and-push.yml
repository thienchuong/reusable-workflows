name: Build and Push

on:
  workflow_call:
    inputs:
      PROJECT:
        required: true
        type: string
      SERVICE:
        required: true
        type: string
      DOCKER_TARGET:
        required: false
        type: string
      DOCKER_PATH:
        required: true
        type: string

    secrets:
      ORG_CI_TS_TOKEN:
        required: true
      DOCKER_USERNAME:
        required: true
      DOCKER_ACCESS_TOKEN:
        required: true

    outputs:
      IMAGE_TAG:
        description: "image tag version"
        value: ${{ jobs.build_and_push.outputs.image_tag }}

jobs:
  build_and_push:
    name: build_and_push
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.prep.outputs.image_tag }}
    steps:
      - name: Checkout current repo
        uses: actions/checkout@v3
        with:
          submodules: true     
          token: ${{ secrets.ORG_CI_TS_TOKEN }}

      - name: Extract metadata to add tag and label Docker image
        uses: docker/metadata-action@v4
        id: meta
        with:
          images: |
            xxx.dkr.ecr.ap-southeast-1.amazonaws.com/${{ inputs.PROJECT }}/${{ inputs.SERVICE }}
          flavor: |
            latest=false
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix=${{ github.event.repository.default_branch }}.,priority=300,format=short,enable={{is_default_branch}}
            type=sha,prefix=${{ github.head_ref || github.ref_name }}.,format=short,enable=${{ github.ref != format('refs/heads/{0}', 'main') }}
            type=semver,pattern=v{{version}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Prepare related info
        id: prep
        run: |
          # commit info
          IMAGE_TAG=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
          MESSAGE=$(echo "${{ github.event.head_commit.message }}" | sed 's/"/\\"/g' | head -1)

          echo "image_tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT
          echo "commit=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          echo "message=${MESSAGE}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::xxx:role/github-actions-role
          aws-region: ap-southeast-1
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker Build and Push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./
          file: ./${{ inputs.DOCKER_PATH }}
          push: true
          target: ${{ inputs.DOCKER_TARGET }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # To support both secret and arg for github token
          # Would suggest to use secret instead
          secrets: |
            GITHUB_TOKEN=${{ secrets.ORG_CI_TS_TOKEN }}
          build-args: |
            GITHUB_TOKEN=${{ secrets.ORG_CI_TS_TOKEN }}
            COMMIT_HASH=${{ steps.prep.outputs.commit }}
