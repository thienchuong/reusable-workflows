name: Build and push docker iamge

on:
  workflow_call:
    inputs:
      aws_region:
        default: ap-southeast-1
        type: string
      role-to-assume:
        default: arn:aws:iam::348129557613:role/github-oidc-provider-aws
        type: string
      aws-ecr:
        default: 348129557613.dkr.ecr.ap-southeast-1.amazonaws.com
        type: string
      docker-tag:
        default: latest # will override by the caller
        type: string

permissions:
  id-token: write
  contents: read        

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout code
        uses: actions/checkout@v4
      
      # use AssumeRoleWithWebIdentity to assume role
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.aws_region }}
          role-to-assume: ${{ inputs.role-to-assume }}
      
      - name: Tag Docker image with datetime format
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ inputs.aws-ecr }}/${{ github.event.repository.name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=ref,event=tag
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Create and use a new builder instance
        run: |
          docker buildx create --name mybuilder --use
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v6.8.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          builder: mybuilder
          cache-from: type=registry,ref=${{ inputs.aws-ecr }}/${{ github.event.repository.name }}:cache
          cache-to: type=registry,mode=max,image-manifest=true,oci-mediatypes=true,ref=${{ inputs.aws-ecr }}/${{ github.event.repository.name }}:cache
      
      - name: Prepare values for dispatch
        id: prepare
        env:
          DOCKER_METADATA: ${{ steps.meta.outputs.json}}
        run: |
          echo "repo=${GITHUB_REPOSITORY#*/}" >> $GITHUB_OUTPUT
          echo "service=${GITHUB_REPOSITORY#*/}" >> $GITHUB_OUTPUT
          echo "repository=morpheuslabs-io/argocd-apps" >> $GITHUB_OUTPUT
          echo "event-type=deploy-prod" >> $GITHUB_OUTPUT

          # pretty print the metadata
          echo $DOCKER_METADATA | jq '.'

          # get the image tag contains 'v'
          image_tag=$(echo "$DOCKER_METADATA" | jq -r '.tags[] | select(. | test("v"))')
          echo $image_tag >> $GITHUB_OUTPUT
          # trigger
      

      - name: Deploy dispatch
        uses: peter-evans/repository-dispatch@v2.1.2
        with:
          token: ${{ secrets.ORG_CI_TOKEN }}
          repository: ${{ steps.prepare.outputs.repository }}
          event-type: ${{ steps.prepare.outputs.event-type }}
          client-payload: |-
            {
            "repo": "${{ steps.prepare.outputs.repo }}",
            "service": "${{ steps.prepare.outputs.service }}",
            "image_tag": "${{ steps.prepare.outputs.image_tag }}"
            }
