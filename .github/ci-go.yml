name: CI

on:
  workflow_call:
    inputs:
      docker-registry:
        required: false
        type: string
      sonar-project:
        required: true
        type: string
      sonar-coverage-path:
        required: true
        type: string
      dependency-check-path:
        required: false
        type: string
        default: output/dependency-check
      cmd-up-arg:
        required: false
        type: string
        default: make test-up
      cmd-down-arg:
        required: false
        type: string
        default: make test-down
      compose-file:
        required: false
        type: string
        default: "docker/docker-compose.test.yml"

jobs:
  go:
    name: run test
    runs-on: self-hosted-cpu
    env:
      GITHUB_SHA: ${{ github.sha }}
      GITHUB_TOKEN: ${{ secrets.ORG_CI_TS_TOKEN }}
    steps:
      - uses: actions/checkout@v3

      - name: Run make up
        run: ${{ inputs.cmd-up-arg }}

      - name: Test result on summary
        if: always()
        continue-on-error: true
        env:
          COMPOSE_FILE: ${{ inputs.compose-file }}
          COMPOSE_PROJECT_NAME: ${{ env.GITHUB_SHA }}
        run: |
          echo '```go' >> $GITHUB_STEP_SUMMARY;
          docker-compose logs --timestamps --no-log-prefix app | tee -a $GITHUB_STEP_SUMMARY;
          echo '```' >> $GITHUB_STEP_SUMMARY;

      - name: Dependency Check
        continue-on-error: true
        run: |
          dependency-check.sh \
            --enableExperimental \
            --format ALL \
            --out ${{ inputs.dependency-check-path }} \
            --prettyPrint \
            -s . \
            --project ${{ inputs.sonar-project }}

      - uses: sonarsource/sonarqube-scan-action@v1
        env:
          SONAR_TOKEN: ${{ secrets.ORG_SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.ORG_SONAR_HOST_URL }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=${{ inputs.sonar-project }}
            -Dsonar.verbose=true
            -Dsonar.sources=.
            -Dsonar.exclusions=**/*_test.go
            -Dsonar.tests=.
            -Dsonar.test.inclusions=**/*_test.go
            -Dsonar.go.coverage.reportPaths=${{ inputs.sonar-coverage-path }}
            -Dsonar.dependencyCheck.jsonReportPath=${{ inputs.dependency-check-path }}/dependency-check-report.json
            -Dsonar.dependencyCheck.htmlReportPath=${{ inputs.dependency-check-path }}/dependency-check-report.html

      - name: Run make down
        if: ${{ always() }}
        run: ${{ inputs.cmd-down-arg }}
